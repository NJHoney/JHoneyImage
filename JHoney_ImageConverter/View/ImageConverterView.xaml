<UserControl x:Class="JHoney_ImageConverter.View.ImageConverterView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:JHoney_ImageConverter.View"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:vc="clr-namespace:JHoney_ImageConverter.Converter"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             Visibility="{Binding Visibility}"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <Grid Margin="5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />

        </Grid.RowDefinitions>
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="KeyDown">
                <i:InvokeCommandAction Command="{Binding ImageConvertViewModelKeyEvent.EventKeyDown}" PassEventArgsToCommand="True" />
            </i:EventTrigger>
            <i:EventTrigger EventName="KeyUp">
                <i:InvokeCommandAction Command="{Binding ImageConvertViewModelKeyEvent.EventKeyUp}" PassEventArgsToCommand="True" />
            </i:EventTrigger>
            <i:EventTrigger EventName="KeyUp">
                <i:InvokeCommandAction Command="{Binding }" PassEventArgsToCommand="True" />
            </i:EventTrigger>
        </i:Interaction.Triggers>

        <!--이미지정보-->
        <Grid Grid.Column="0" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <GroupBox Grid.Column="0" Margin="5" HorizontalAlignment="Center">
                <StackPanel  Orientation="Horizontal" Margin="5">
                    <DataGrid x:Name="DataGrid" ItemsSource="{Binding ImageInfoDataGridList}" HorizontalAlignment="Center" VerticalAlignment="Center" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Loaded">
                                <i:InvokeCommandAction Command="{Binding Path=CommandLoaded}" CommandParameter="{Binding ElementName=DataGrid, Mode=OneWay}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>
                </StackPanel>
            </GroupBox>
            <!--ROI박스-->
            <GroupBox Grid.Column="1" Margin="5" HorizontalAlignment="Center" Visibility="{Binding IsSelectRectangle, Converter={vc:BoolenToVisibilityConverter}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock Text="ROI X : " VerticalAlignment="Center" Margin="5" />
                        <TextBox Width="45" Height="15" Text="{Binding StartRectPointX}" VerticalAlignment="Center" Margin="5" />
                        <TextBlock Text="ROI Y : " VerticalAlignment="Center" Margin="5" />
                        <TextBox Width="45" Text="{Binding StartRectPointY}" VerticalAlignment="Center" Margin="5" />
                        <Button Content="Crop" Margin="5" VerticalAlignment="Center" Command="{Binding CommandCropResize}" CommandParameter="Crop" />

                    </StackPanel>
                    <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock Text="Width : " VerticalAlignment="Center" Margin="5" />
                        <TextBox Width="45" Text="{Binding RectWidth}" VerticalAlignment="Center" Margin="5" />
                        <TextBlock Text="Height : " VerticalAlignment="Center" Margin="5" />
                        <TextBox Width="45" Text="{Binding RectHeight}" VerticalAlignment="Center" Margin="5" />
                        <Button Content="ReSize" Margin="5" VerticalAlignment="Center" Command="{Binding CommandCropResize}" CommandParameter="ReSize" />
                    </StackPanel>
                    <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                        <TextBlock Text="Size : " VerticalAlignment="Center" Margin="5" />
                        <TextBox Width="45" Text="{Binding RatioResizeSize}" VerticalAlignment="Center" Margin="5" />
                        <Button Content="ReSize-Ratio" Margin="5" VerticalAlignment="Center" Command="{Binding CommandCropResize}" CommandParameter="ReSizeRatio" />
                    </StackPanel>
                </Grid>
            </GroupBox>
        </Grid>
        <!--캔버스-->
        <ScrollViewer Grid.Column="0" Grid.Row="2" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <Canvas x:Name="MainCanvas" Background="{Binding ImageShow.ImageBrush}" Width="{Binding Background.ImageSource.Width, ElementName=MainCanvas, Mode=OneWay}" Height="{Binding Background.ImageSource.Height, ElementName=MainCanvas, Mode=OneWay}" AllowDrop="True">
                <Canvas.LayoutTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="{Binding ImageShow.ImageBrushScaleX}" ScaleY="{Binding ImageShow.ImageBrushScaleY}"></ScaleTransform>
                    </TransformGroup>
                </Canvas.LayoutTransform>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Loaded">
                        <i:InvokeCommandAction Command="{Binding Path=CommandLoaded}" CommandParameter="{Binding ElementName=MainCanvas, Mode=OneWay}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseUp">
                        <i:InvokeCommandAction Command="{Binding Path=CanvasEventMouseUp}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseDown">
                        <i:InvokeCommandAction Command="{Binding Path=CanvasEventMouseDown}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseMove">
                        <i:InvokeCommandAction Command="{Binding Path=CanvasEventMouseMove}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Drop">
                        <i:InvokeCommandAction Command="{Binding Path=CommandDropFile}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseWheel">
                        <i:InvokeCommandAction Command="{Binding Path=CanvasEventMouseWheel}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Canvas.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="{Binding CanvasContext}" CommandParameter="Normal" Header="Normal" IsChecked="{Binding IsSelectNormal}" />
                        <MenuItem Command="{Binding CanvasContext}" CommandParameter="Hand" Header="Hand" />
                        <MenuItem Command="{Binding CanvasContext}" CommandParameter="SetROI" Header="SetROI" IsCheckable="True" IsChecked="{Binding IsSelectRectangle}"/>
                        <MenuItem Command="{Binding CanvasContext}" CommandParameter="ToList" Header="ToList" />
                        <MenuItem Command="{Binding CanvasContext}" CommandParameter="Save" Header="Save" />
                    </ContextMenu>
                </Canvas.ContextMenu>
                <Rectangle Stroke="Red" RenderTransformOrigin="0.5,0.5" StrokeThickness="5" Width="{Binding RectWidth}" Height="{Binding RectHeight}" Visibility="{Binding IsSelectRectangle, Converter={vc:BoolenToVisibilityConverter}}" >
                    <Rectangle.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform X="{Binding StartRectPointX}" Y="{Binding StartRectPointY}"/>
                        </TransformGroup>
                    </Rectangle.RenderTransform>
                </Rectangle>
            </Canvas>
        </ScrollViewer>



        <!--옵션탭-->

        <Grid Grid.Column="0" Grid.Row="1" Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <GroupBox Grid.Column="0" Header="Converter" Margin="5" VerticalAlignment="Stretch">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5">
                    <Button Content="GrayScale" Margin="5" Command="{Binding CommandSingleConvert}" CommandParameter="GrayScale" />
                    <Button Content="Erode" Margin="5" Command="{Binding CommandSingleConvert}" CommandParameter="Erode" />
                    <Button Content="Dilate" Margin="5" Command="{Binding CommandSingleConvert}" CommandParameter="Dilate" />
                    <Button Content="Reverse" Margin="5" Command="{Binding CommandSingleConvert}" CommandParameter="Reverse" />
                    <Button Content="Red" Margin="5" Command="{Binding CommandSingleConvert}" CommandParameter="Red" />
                    <Button Content="Green" Margin="5" Command="{Binding CommandSingleConvert}" CommandParameter="Green" />
                    <Button Content="Blue" Margin="5" Command="{Binding CommandSingleConvert}" CommandParameter="Blue" />
                    <!--<Button Content="Test" Margin="5" Command="{Binding CommandSingleConvert}" CommandParameter="Test" />-->
                </StackPanel>
            </GroupBox>

            <GroupBox Grid.Column="1" Header="Parameter Converter" Margin="5" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center">
                        <StackPanel.Resources>
                            <Style x:Key="CustomRadioButton" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource MahApps.Styles.Button.MetroSquare}" >
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter Property="Opacity" Value="0.4"/>
                                    </Trigger>
                                </Style.Triggers>
                                <Setter Property="BorderThickness" Value="2"/>
                            </Style>
                        </StackPanel.Resources>
                        <RadioButton Style="{StaticResource CustomRadioButton}" Content="Threshold" Command="{Binding CommandSelectOption}" CommandParameter="Threshold" Margin="5" IsChecked="True" />
                        <RadioButton Style="{StaticResource CustomRadioButton}" Content="Canny" Command="{Binding CommandSelectOption}" CommandParameter="Canny" Margin="5" />
                        <RadioButton Style="{StaticResource CustomRadioButton}" Content="Gaussian" Command="{Binding CommandSelectOption}" CommandParameter="Gaussian" Margin="5" />
                        <RadioButton Style="{StaticResource CustomRadioButton}" Content="Median" Command="{Binding CommandSelectOption}" CommandParameter="Median" Margin="5" />
                        <RadioButton Style="{StaticResource CustomRadioButton}" Content="Rotation" Command="{Binding CommandSelectOption}" CommandParameter="Rotation" Margin="5" />
                    </StackPanel>
                    <Slider x:Name="scrollBar" Grid.Column="0" Grid.Row="1" Orientation="Horizontal" Width="200" Minimum="{Binding OptionParamSlider_01_Min}" Maximum="{Binding OptionParamSlider_01_Max}" Value="{Binding OptionParamSlider_01_Value}" Margin="5" HorizontalAlignment="Stretch" VerticalAlignment="Center" SmallChange="1" LargeChange="10" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="ValueChanged">
                                <i:InvokeCommandAction Command="{Binding Path=CommandChangeSliderValue}" PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Slider>
                    <Controls:NumericUpDown Grid.Column="0" Grid.Row="2" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Right" Value="{Binding Value, ElementName=scrollBar, Converter={vc:FloatToInteger}}" />

                    <Slider x:Name="scrollBar2" Grid.Column="1" Grid.Row="1" Orientation="Horizontal" Width="200" Minimum="{Binding Value, ElementName=scrollBar, Converter={vc:FloatToInteger}}" Maximum="{Binding OptionParamSlider_02_Max}" Value="{Binding OptionParamSlider_02_Value}" Margin="5" HorizontalAlignment="Stretch" VerticalAlignment="Center" SmallChange="1" LargeChange="10" Visibility="{Binding Param2Visibility}" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="ValueChanged">
                                <i:InvokeCommandAction Command="{Binding Path=CommandChangeSliderValue2}" PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Slider>
                    <Controls:NumericUpDown Grid.Column="1" Grid.Row="2" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Right" Value="{Binding Value, ElementName=scrollBar2, Converter={vc:FloatToInteger}}" Visibility="{Binding Param2Visibility}" />

                    <Button Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="3" Content="Confirm" Command="{Binding CommandConfirmChange}" HorizontalAlignment="Center" Margin="5" />
                </Grid>
            </GroupBox>

        </Grid>


    </Grid>
</UserControl>
